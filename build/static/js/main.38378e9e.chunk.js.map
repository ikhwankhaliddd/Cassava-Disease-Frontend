{"version":3,"sources":["cblogoo.PNG","bg.png","home.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","useStyles","makeStyles","theme","grow","flexGrow","uploadButton","width","borderRadius","padding","color","fontSize","fontWeight","root","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","image","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","backgroundColor","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","appbar","ImageUpload","classes","useState","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","confidence","sendFile","a","formData","FormData","append","method","url","process","res","status","useEffect","objectUrl","URL","createObjectURL","undefined","parseFloat","toFixed","Fragment","AppBar","position","className","Toolbar","Typography","title","variant","noWrap","Avatar","src","cblogo","Container","disableGutters","Grid","container","direction","alignItems","item","xs","Card","CardActionArea","CardMedia","component","CardContent","content","acceptedFiles","dropzoneText","onChange","files","length","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38378e9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cblogoo.0c081e30.PNG\";","export default __webpack_public_path__ + \"static/media/bg.d6836046.png\";","import { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell } from \"@material-ui/core\";\r\nimport cblogo from \"./cblogoo.PNG\";\r\nimport image from \"./bg.png\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n\r\n\r\n\r\n\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  uploadButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"white\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n  },\r\n  appbar: {\r\n    background: '#be6a77',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Rice Plant Nutrient Defeciency Classification\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Avatar src={(cblogo)}></Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n                <DropzoneArea\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={\"Drag and drop an image of a potato plant leaf to process\"}\r\n                  onChange={onSelectFile}\r\n                />\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { ImageUpload } from \"./home\";\r\n\r\nfunction App() {\r\n  return <ImageUpload />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}